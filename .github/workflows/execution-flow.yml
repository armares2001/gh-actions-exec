name: Website Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    strategy:
      matrix:
        node-version: [14, 18]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - node-version: 15
            os: ubuntu-latest
          - node-version: 16
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Echo Node version
        run: echo "Node version is ${{ matrix.node-version }} on ${{ matrix.os }}"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        continue-on-error: true
        id: run-test
        run: npm run test
      - name: Upload test report
        # if: failure() && steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  reuse:
    needs: test
    uses: ./.github/workflows/reuse.yml
    with:
      node-version: '["14", "16", "18"]' # Passa i valori come una stringa JSON
      os: '["ubuntu-latest", "windows-latest"]' # Anche qui, i sistemi operativi come stringa JSON
  build:
    needs: reuse
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
